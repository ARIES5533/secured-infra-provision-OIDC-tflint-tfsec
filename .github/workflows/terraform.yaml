name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - testing

jobs:
  # -------------------------------
  # üîê SECURITY JOB: Linting + tfsec
  # -------------------------------
  security:
    name: Security & Compliance Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.0
      
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-session-name: samplerolesession
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Fmt Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
      - run: tflint --init && tflint

      - name: Run tfsec scan
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: .
          format: sarif
          additional_args: --out tfsec.sarif
          github_token: ${{ secrets.GITHUB_TOKEN }}
          soft_fail: true

      - name: Upload tfsec report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tfsec.sarif

  # -------------------------------
  # üöÄ DEPLOY JOB: Terraform Plan + Apply
  # -------------------------------
  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: security     # üëà ensures security job runs first
    permissions:
      id-token: write
      contents: read
      issues: write
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.0

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false -no-color

      # üü° Manual approval before prod apply
      - name: Wait for manual approval before Apply
        if: github.ref == 'refs/heads/main'
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ARIES5533
          minimum-approvals: 1
          issue-title: "Production Terraform Apply Approval"
          issue-body: "Please approve this Terraform apply for the main branch."

      # ‚úÖ Auto apply for testing branch
      - name: Terraform Apply (Auto)
        if: github.ref == 'refs/heads/testing'
        run: terraform apply -auto-approve tfplan

      # ‚úÖ Apply after approval for prod
      - name: Terraform Apply (Production)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
