name: Terraform CI/CD

on:
  push:
    branches:
      - main
      - testing

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read
      security-events: write 
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.0

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          role-session-name: samplerolesession
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init -input=false

      # Step 1: Check Terraform formatting
      - name: Terraform Format Check
        run: terraform fmt -check

      # Step 2: Validate Terraform configuration
      - name: Terraform Validate Configuration
        run: terraform validate

      # Step 3: Run Terraform linting with TFLint
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint Analysis
        run: tflint --init && tflint

      # Step 4: Run static security scan with tfsec
      - name: Run tfsec Security Scan
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: .
          format: sarif
          additional_args: --out tfsec.sarif
          github_token: ${{ secrets.GITHUB_TOKEN }}
          soft_fail: true

      # Step 5: Upload tfsec results to GitHub Security tab
      - name: Upload tfsec Security Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tfsec.sarif


      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false -no-color

      # Manual approval for PROD (main branch)
      - name: Wait for manual approval before Apply
        if: github.ref == 'refs/heads/main'
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ARIES5533
          minimum-approvals: 1
          issue-title: "Production Terraform Apply Approval"
          issue-body: "Please approve this Terraform apply for the main branch."


      # Terraform Apply for all branches
      - name: Terraform Apply
        if: github.ref != 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      # Apply for main only after approval
      - name: Terraform Apply (Production)
        if: github.ref == 'refs/heads/main'
        run: terraform apply -input=false -auto-approve tfplan